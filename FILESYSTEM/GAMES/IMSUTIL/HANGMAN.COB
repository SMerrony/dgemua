IDENTIFICATION DIVISION.
PROGRAM-ID.     HANGMANS.
AUTHOR.         R. DAVIS.
INSTALLATION.   IMSL MIS.
DATE-WRITTEN.   86-04-14.
DATE-COMPILED.
SECURITY.       CONFIDENTIAL.

ENVIRONMENT DIVISION.

CONFIGURATION SECTION.

SOURCE-COMPUTER.    ECLIPSE.
OBJECT-COMPUTER.    ECLIPSE.

SPECIAL-NAMES.
INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT FILE-IN 	 	ASSIGN TO     DISK INPATH.

DATA DIVISION.
FILE SECTION.
FD FILE-IN.
01 INPUT-REC.
    03 INPUT-ANSWER             PIC X(40).
    03 INPUT-DESCRIPTION        PIC X(40).

/
WORKING-STORAGE SECTION.
01 INPATH			PIC X(10) VALUE "OLD.DATA".
01 THE-STATUS			PIC 9(10).
01 ARG-NBR			PIC 999.
01 ARGUMENT			PIC X(32).
01 THE-PROCESS-NAME     	PIC X(15).
01 THE-INITIAL-IPC-MSG  	PIC X(512).
01 THE-TERMINATION-MSG		PIC X(512).

01 WS-CHAR-SELECTED.
    03 WS-CHAR PIC X OCCURS 40 TIMES.
01 WS-UNDERSCORE            	PIC X(40) VALUE ALL "-".
01 WS-SELECT			PIC X.
01 WS-UPPER-CASE                PIC X.

01 WS-GUESS-KEY.
    03 WS-GUESS			PIC X OCCURS 40 TIMES.

01 WS-VOWELS-ONLY		PIC X(18).

01 WS-UND-SCORE.
    03 WS-UND			PIC X OCCURS 40 TIMES.

01 WS-ASTERISK-78		PIC X(78) VALUE ALL "*".
01 WS-LEVEL-IND			PIC 9 VALUE 1.
    88 VALID-LEVEL		VALUE 1 THRU 4.
    88 LEVEL1			VALUE 1.
    88 LEVEL2			VALUE 2.
    88 LEVEL3			VALUE 3.
    88 LEVEL4			VALUE 4.
01 WS-PARDON-HUNG-IND		PIC 9.
    88 WS-PARDON		VALUE 1.
    88 WS-HUNG			VALUE 9.
01 VALID-VOWELS-IND		PIC X.
    88 VALID-VOWEL		VALUE "A" "E" "I" "O" "U".
01 FILE-IN-EOF-IND		PIC X.
    88 FILE-IN-EOF              VALUE "Y".
01 WS-WON-LOST-IND		PIC X(09).
01 NBR-NON-VOWEL-CHARS          PIC 99.
01 NBR-TIMES-CHAR-OCCURS        PIC 99..
01 WS-CNTR			PIC 99.
01 SEARCH-FINISH		PIC 9.
01 WS-AMT			PIC X(08).
01 WS-AMOUNT REDEFINES WS-AMT   PIC ZZZ,ZZ9-.
01 WS-AMOUNT-NUM		PIC 9(06).
01 WS-VAL			PIC X(07).
01 WS-VALUE REDEFINES WS-VAL    PIC ZZZ,ZZ9.
01 WS-VALUE-NUM			PIC S9(06).
01 WS-BAL			PIC X(08).
01 WS-BALANCE REDEFINES WS-BAL  PIC ZZZ,ZZ9-.
01 WS-BALANCE-NUM               PIC S9(06) VALUE 15000.
01 WS-SIZE-40			PIC 999 VALUE 40.
01 WS-SIZE-01			PIC 999 VALUE 01.

01 HM-BODY.
  02 HM-HEAD.
    03 FILLER    	PIC X(06) VALUE  	 "------".
    03 FILLER           PIC X(09) VALUE  	"/ ~  ~  \".
    03 FILLER           PIC X(12) VALUE        "}| *    * |{".
    03 FILLER           PIC X(09) VALUE  	"\   ^   /".
    03 FILLER           PIC X(06) VALUE    	 "\ __ /".
    03 FILLER           PIC X(04) VALUE           "|  |".
  02 HM-TORSO.
    03 FILLER		PIC X(10) VALUE        "__/    \__".
    03 FILLER           PIC X(12) VALUE       "/  |    |  \".
    03 FILLER		PIC X(16) VALUE     "_/   |    |   \_".
    03 FILLER           PIC X(06) VALUE          "|____|".
  02 HM-LEGS.
    03 FILLER		PIC X(06) VALUE          "/    \".
    03 FILLER           PIC X(08) VALUE         "/      \".
    03 FILLER           PIC X(10) VALUE        "/        \".
    03 FILLER           PIC X(18) VALUE    "___/          \___".

01 WS-BODY.
    02 WS-HEAD.
    	03 WS-HEAD-1	PIC X(06).
    	03 WS-HEAD-2	PIC X(09).
    	03 WS-HEAD-3	PIC X(12).
    	03 WS-HEAD-4	PIC X(09).
    	03 WS-HEAD-5	PIC X(06).
    	03 WS-HEAD-6	PIC X(04).
    02 WS-TORSO.
    	03 WS-TORSO-1   PIC X(10).
    	03 WS-TORSO-2   PIC X(12).
    	03 WS-TORSO-3   PIC X(16).
    	03 WS-TORSO-4   PIC X(06).
    02 WS-LEGS.
    	03 WS-LEGS-1	PIC X(06).
    	03 WS-LEGS-2	PIC X(08).
    	03 WS-LEGS-3	PIC X(10).
    	03 WS-LEGS-4	PIC X(18).

01 WS-DIRECTIONS.
    03 WS-LEV-11 		PIC X(41) VALUE
       "1 Requires selection of all constants   *".
    03 WS-LEV-12                PIC X(41) VALUE
       "  before vowels are valid.              *".
    03 WS-LEV-21 		PIC X(41) VALUE
       "2 Same as level-1 but displays          *".
    03 WS-LEV-22                PIC X(41) VALUE
       "  description of key word as a clue.    *".
    03 WS-LEV-31		PIC X(41) VALUE
       "3 Same as level-2 but inform user       *".
    03 WS-LEV-32                PIC X(41) VALUE
       "  when all constants are selected.      *".

01 INDX1			PIC 9999.
01 INDX2			PIC 9999.
01 INDX3			PIC 9999.
01 INDX4			PIC 9999.
01 MAX-INDX			PIC 9999.
01 SPLIT-INDX			PIC 9999.
01 CHAR-INDX			PIC 9999.
01 TABLE-INDX			PIC 9999.
01 WS-ANSWER-REC.
    03 WS-ANSWER-KEY.
        05 WS-ANSWER	PIC X OCCURS 40 TIMES.
    03 WS-ANSWER-DESC   PIC X(40).
01 WS-WORK-TABLE.
    03 WS-WORK-REC  OCCURS 1000 TIMES.
    	05 WS-WORK-ANSWER       PIC X(40).
        05 WS-WORK-DESC         PIC X(40).

01 WS-TABLE.
    03 WS-TABLE-REC OCCURS 1000 TIMES.
        05 WS-TABLE-ANSWER      PIC X(40).
        05 WS-TABLE-DESC        PIC X(40).

01 VOWELS-ONLY-MSG.
    03 FILLER 	PIC X(18)
             VALUE "<016><036><104>VOWELS ONLY<036><105><017> ".
    03 FILLER   PIC X(01) VALUE LOW-VALUES.

01 DEFAULT-KEY-OPTIONS.
    03 FILLER	PIC X(09) VALUE "<036><104>DONE<036><105> ".
    03 FILLER	PIC X(09) VALUE "<036><104>STOP<036><105> ".
    03 FILLER	PIC X(12) VALUE "<036><104>ABANDON<036><105> ".
    03 FILLER   PIC X(01) VALUE LOW-VALUES.

/
    COPY "D02_BASIC_DATE_WS.CPY".
/
    COPY "F01_CURSOR_WS.CPY".
/
    COPY "U01_BASIC_WS.CPY".
/
SCREEN SECTION.
 
01 SS-INSTRUCTIONS.
    03 			LINE 04 COL 02 PIC X(78) FROM WS-ASTERISK-78.
    03			LINE 05 COL 02 "*".
    03			LINE 05 COL 44 "*".
    03			LINE 05 COL 79 "*".
    03			LINE 06 COL 02 "*               LEVELS".
    03			LINE 06 COL 44 "*".
    03			LINE 06 COL 55 "DOLLAR AMOUNTS".
    03			LINE 06 COL 79 "*".
    03			LINE 07 COL 02 "*".
    03			LINE 07 COL 04 PIC X(41) FROM WS-LEV-11.
    03			LINE 07 COL 49 "Beginning balance = 10,000".
    03			LINE 07 COL 79 "*".
    03			LINE 08 COL 02 "*".
    03                  LINE 08 COL 04 PIC X(41) FROM WS-LEV-12.
    03                  LINE 08 COL 49 "Right selection = n * 1000".
    03			LINE 08 COL 79 "*".
    03			LINE 09 COL 02 "*".
    03  		LINE 09 COL 44 "*".
    03  		LINE 09 COL 49 "Wrong selection =    -5000".
    03			LINE 09 COL 79 "*".
    03			LINE 10 COL 02 "*".
    03			LINE 10 COL 04 PIC X(41) FROM WS-LEV-21.
    03			LINE 10 COL 79 "*".
    03			LINE 11 COL 02 "*".
    03                  LINE 11 COL 04 PIC X(41) FROM WS-LEV-22.
    03			LINE 11 COL 49 "Balance of 0.00 terminates".
    03			LINE 11 COL 79 "*".
    03			LINE 12 COL 02 "*".
    03			LINE 12 COL 44 "*".
    03			LINE 12 COL 49 "    program.".
    03			LINE 12 COL 79 "*".
    03			LINE 13 COL 02 "*".
    03			LINE 13 COL 04 PIC X(41) FROM WS-LEV-31.
    03			LINE 13 COL 79 "*".
    03			LINE 14 COL 02 "*".
    03                  LINE 14 COL 04 PIC X(41) FROM WS-LEV-32.
    03 			LINE 14 COL 79 "*".
    03 			LINE 15 COL 02 "*".
    03 			LINE 15 COL 44 "*".
    03 			LINE 15 COL 79 "*".
    03 			LINE 16 COL 02 PIC X(78) FROM WS-ASTERISK-78.
    03		        LINE 19 COL 25 "Select desired level".
    03 SS-LEVEL         LINE 19 COL 46 PIC X USING WS-LEVEL-IND AUTO.
    03              LINE 24 COL 35 PIC X(40) FROM DEFAULT-KEY-OPTIONS.

01 SS-EXTEND-SCREEN.
    03 			LINE 16 COL 20 "Enter key word".
    03 SS-ANSWER        LINE 16 COL 35 PIC X(40) USING WS-ANSWER-KEY.
    03                  LINE 17 COL 20 "Enter descript".
    03 SS-DESC          LINE 17 COL 35 PIC X(40) USING WS-ANSWER-DESC.


01 SS-SCREEN-DISPLAY.
    03 SS-CHAR-SELECTED	LINE 04 COL 01 PIC X(40) USING WS-CHAR-SELECTED.
    03 			LINE 04 COL 66 PIC X(06) USING WS-HEAD-1.
    03      	        LINE 05 COL 01 PIC X(40) USING WS-UNDERSCORE.
    03 			LINE 05 COL 65 PIC X(09) USING WS-HEAD-2.
    03      	        LINE 06 COL 63 PIC X(12) USING WS-HEAD-3.
    03      	        LINE 07 COL 65 PIC X(09) USING WS-HEAD-4.
    03                  LINE 08 COL 02 "Amount  +".
    03                  LINE 08 COL 12 PIC X(08) USING WS-AMT.
    03      	        LINE 08 COL 66 PIC X(06) USING WS-HEAD-5.
    03                  LINE 09 COL 02 PIC X(09) USING WS-WON-LOST-IND.
    03                  LINE 09 COL 12 PIC X(07) USING WS-VAL.
    03      	        LINE 09 COL 67 PIC X(04) USING WS-HEAD-6.
    03                  LINE 10 COL 12 "-------".
    03      	        LINE 10 COL 64 PIC X(10) USING WS-TORSO-1.
    03                  LINE 11 COL 02 "Balance =".
    03                  LINE 11 COL 12 PIC X(08) USING WS-BAL.
    03      	        LINE 11 COL 63 PIC X(12) USING WS-TORSO-2.
    03      	        LINE 12 COL 61 PIC X(16) USING WS-TORSO-3.
    03      	        LINE 13 COL 66 PIC X(06) USING WS-TORSO-4.
    03      	        LINE 14 COL 66 PIC X(06) USING WS-LEGS-1.
    03      	        LINE 15 COL 65 PIC X(08) USING WS-LEGS-2.
    03			LINE 16 COL 02 PIC X(18) USING WS-VOWELS-ONLY.
    03      	        LINE 16 COL 64 PIC X(10) USING WS-LEGS-3.
    03      	        LINE 17 COL 60 PIC X(18) USING WS-LEGS-4.
    03                  LINE 17 COL 18 PIC X(40) USING WS-ANSWER-DESC.
    03 			LINE 19 COL 30 PIC X(40) USING WS-GUESS-KEY.
    03 			LINE 20 COL 30 PIC X(40) USING WS-UND-SCORE.
    03 			LINE 22 COL 43 "Select character".
    03 SS-SELECT 	LINE 22 COL 60 PIC X USING WS-SELECT AUTO.
    03              LINE 24 COL 35 PIC X(40) FROM DEFAULT-KEY-OPTIONS.
/
    COPY "F01_CURSOR_SCREENS.SS".
/
    COPY "U01_BASIC_SS.CPY".
/
PROCEDURE DIVISION.
0000-START-UP.
    PERFORM 9900-PREPARE-HEADINGS.
    PERFORM 9200-EXTEND-FILE.
    PERFORM 9000-BUILD-SELECTION-TABLE.
    IF NOT F01-STOP
        PERFORM 8000-GET-ANSWER
        PERFORM 1000-ACCEPT UNTIL F01-STOP OR F01-DONE OR F01-ABANDON
        PERFORM U01-STOP-RUN
        PERFORM U01-BLANK-SCREEN
        PERFORM 9100-CREATE-NEW-INPUT-FILE
    ELSE
        PERFORM U01-STOP-RUN
        PERFORM U01-BLANK-SCREEN.
    MOVE SPACES 	TO THE-PROCESS-NAME.
    MOVE LOW-VALUES 	TO THE-TERMINATION-MSG.
    CALL "TERMINATE" USING
        THE-PROCESS-NAME THE-TERMINATION-MSG THE-STATUS.
    STOP RUN.
0000-EXIT. EXIT.

1000-ACCEPT.
    MOVE SPACES TO WS-SELECT.
    DISPLAY SS-SCREEN-DISPLAY.
    PERFORM U01-WAITING.
    DISPLAY SS-SELECT.
    ACCEPT SS-SELECT.
    PERFORM U01-ACCEPT-FUNCTION-KEY.
    PERFORM 1100-EDIT-FUNCTION-KEY.
    PERFORM U01-PROCESS-FUNCTION-KEY.
1000-EXIT. EXIT.

1100-EDIT-FUNCTION-KEY.
    IF F01-STOP OR F01-DONE OR F01-ABANDON
        NEXT SENTENCE
    ELSE
    IF F01-NEW-LINE
        IF WS-SELECT NOT = SPACES
            PERFORM 1200-VERIFY-SELECTED-CHARACTER
            IF NOT F01-ESCAPE
                PERFORM 1500-VERIFY-PARDON
            ELSE
                PERFORM 1510-VERIFY-HUNG
            END-IF
        END-IF
    ELSE
        PERFORM U01-INVALID-FUNCTION-KEY.
    IF F01-ESCAPE
        PERFORM 9800-FLASH-INSTRUCTIONS.
1100-EXIT. EXIT.

1200-VERIFY-SELECTED-CHARACTER.
    MOVE 0 TO NBR-TIMES-CHAR-OCCURS WS-VALUE-NUM.
    CALL "UPPERCASE" USING WS-SELECT WS-SIZE-01.
    MOVE WS-SELECT TO VALID-VOWELS-IND.
    IF NBR-NON-VOWEL-CHARS > 0
        IF VALID-VOWEL AND NOT LEVEL4
            MOVE F01-VALUE-ESCAPE TO F01-FUNCTION-KEY
            MOVE "Non vowel characters exceeds 0" TO U01-INSTRUCTIONS.
    IF NOT F01-ESCAPE
        PERFORM 1300-VERIFY-CHAR-NOT-USED.
    IF NOT F01-ESCAPE
        PERFORM 1210-VERIFY-CHAR-VALID.
    IF NOT F01-ESCAPE
        PERFORM 1400-CALCULATE-AMOUNTS
    ELSE
        MOVE -500 			TO WS-VALUE-NUM.
    MOVE WS-BALANCE-NUM 		TO WS-AMOUNT-NUM WS-AMOUNT.
    COMPUTE WS-BALANCE-NUM = WS-BALANCE-NUM + WS-VALUE-NUM.
    MOVE WS-BALANCE-NUM 		TO WS-BALANCE.
    MOVE WS-VALUE-NUM 			TO WS-VALUE.
    MOVE SPACES				TO WS-WON-LOST-IND.
    IF WS-VALUE-NUM > 0
        MOVE "WON     +"		TO WS-WON-LOST-IND
    ELSE
    IF WS-VALUE-NUM < 0
        MOVE "LOST    +" 		TO WS-WON-LOST-IND.
1200-EXIT. EXIT.

1210-VERIFY-CHAR-VALID.
    MOVE 0 TO INDX2.
    PERFORM 1220-SEARCH-ANSWER-FOR-CHARACTERS UNTIL INDX2 = 40.
    IF NBR-TIMES-CHAR-OCCURS = 0
        MOVE "Bad choice" TO U01-INSTRUCTIONS
        MOVE F01-VALUE-ESCAPE TO F01-FUNCTION-KEY.
1210-EXIT. EXIT.

1220-SEARCH-ANSWER-FOR-CHARACTERS.
    ADD 1 TO INDX2.
    MOVE WS-ANSWER (INDX2) TO WS-UPPER-CASE.
    CALL "UPPERCASE" USING WS-UPPER-CASE WS-SIZE-01.
    IF WS-UPPER-CASE = WS-SELECT
        ADD 1 TO NBR-TIMES-CHAR-OCCURS
        MOVE WS-ANSWER (INDX2) TO WS-GUESS (INDX2)
        IF NOT VALID-VOWEL
            SUBTRACT 1 FROM NBR-NON-VOWEL-CHARS.
1220-EXIT. EXIT.

1300-VERIFY-CHAR-NOT-USED.
    MOVE 40 TO INDX2.
    MOVE 39 TO INDX1.
    MOVE 0 TO CHAR-INDX.
    IF WS-CHAR(1) = WS-SELECT
        MOVE "Character has been selected" TO U01-INSTRUCTIONS
        MOVE F01-VALUE-ESCAPE TO F01-FUNCTION-KEY
    ELSE
    IF WS-CHAR(40) NOT = HIGH-VALUES
        MOVE F01-VALUE-ESCAPE TO F01-FUNCTION-KEY
        MOVE "Selected char table full" TO U01-INSTRUCTIONS
    ELSE
        PERFORM 1305-CHECK-TABLE-FOR-CHAR UNTIL CHAR-INDX = 40 OR
            WS-SELECT = WS-CHAR (CHAR-INDX).
1300-EXIT. EXIT.

1305-CHECK-TABLE-FOR-CHAR.
     ADD 1 TO CHAR-INDX.
     IF WS-CHAR (CHAR-INDX) < WS-SELECT
         NEXT SENTENCE
     ELSE
     IF WS-CHAR(CHAR-INDX) = WS-SELECT
         MOVE F01-VALUE-ESCAPE TO F01-FUNCTION-KEY
         MOVE "Character has been selected" TO U01-INSTRUCTIONS
     ELSE
     IF WS-CHAR (CHAR-INDX) = HIGH-VALUES
         MOVE WS-SELECT  TO WS-CHAR (CHAR-INDX)
     ELSE
         PERFORM 1310-INSERT  UNTIL INDX1 < CHAR-INDX
         MOVE WS-SELECT TO WS-CHAR (CHAR-INDX).
1305-EXIT. EXIT.

1310-INSERT.
    MOVE WS-CHAR (INDX1) TO WS-CHAR (INDX2).
    SUBTRACT 1 FROM INDX1 INDX2.
1310-EXIT. EXIT.

1400-CALCULATE-AMOUNTS.
    IF VALID-VOWEL
        IF LEVEL4
            IF NBR-NON-VOWEL-CHARS = 0
                MOVE 50 TO WS-VALUE-NUM
            ELSE
                MOVE -1000 TO WS-VALUE-NUM
        ELSE
        IF LEVEL3
            IF NBR-NON-VOWEL-CHARS = 0
                MOVE 0 TO WS-VALUE-NUM
            ELSE
                MOVE -1000 TO WS-VALUE-NUM
        ELSE
        IF LEVEL2
            IF NBR-NON-VOWEL-CHARS = 0
                MOVE 0 TO WS-VALUE-NUM
            ELSE
                MOVE -5000 TO WS-VALUE-NUM
         ELSE
             NEXT SENTENCE
    ELSE
        COMPUTE WS-VALUE-NUM = NBR-TIMES-CHAR-OCCURS * 100.
1400-EXIT. EXIT.

1500-VERIFY-PARDON.
    IF WS-ANSWER-KEY = WS-GUESS-KEY
        MOVE SPACES TO WS-SELECT
        DISPLAY SS-SCREEN-DISPLAY
        MOVE "GOT IT" TO U01-INSTRUCTIONS
        PERFORM 9800-FLASH-INSTRUCTIONS
        PERFORM 8000-GET-ANSWER.
1500-EXIT. EXIT.

1510-VERIFY-HUNG.
    ADD 1 TO WS-CNTR.
    PERFORM 1530-DISPLAY-BODY.
    IF WS-CNTR > 6
        DISPLAY SS-SCREEN-DISPLAY
        MOVE F01-VALUE-NEW-LINE TO F01-FUNCTION-KEY
        MOVE "YOU'RE HUNG" TO U01-INSTRUCTIONS
        PERFORM 9800-FLASH-INSTRUCTIONS
        PERFORM 8000-GET-ANSWER.
1510-EXIT. EXIT.

1530-DISPLAY-BODY.
    IF WS-CNTR = 2
        MOVE HM-HEAD TO WS-HEAD
    ELSE
    IF WS-CNTR = 4
        MOVE HM-TORSO TO WS-TORSO
    ELSE
    IF WS-CNTR = 6
        MOVE HM-LEGS TO WS-LEGS.
1530-EXIT. EXIT.

8000-GET-ANSWER.
    PERFORM U01-BLANK-SCREEN.
    PERFORM U01-DISPLAY-TITLES.
    PERFORM 8900-INITIALIZE-FIELDS.
    PERFORM 8100-GET-TABLE-ENTRY.
    MOVE 0 TO WS-CNTR WS-PARDON-HUNG-IND NBR-NON-VOWEL-CHARS.
    MOVE 1 TO INDX1.
    MOVE 2 TO INDX2.
    PERFORM 8010-CREATE-UNDERSCORE UNTIL INDX1 > 40.
    IF NBR-NON-VOWEL-CHARS = 0 AND (LEVEL3 OR LEVEL4)
        MOVE VOWELS-ONLY-MSG TO WS-VOWELS-ONLY.
8000-EXIT. EXIT.

8010-CREATE-UNDERSCORE.
    IF WS-ANSWER (INDX1) = SPACES
        NEXT SENTENCE
    ELSE
    IF WS-ANSWER (INDX1) = "-" OR "'"
        MOVE WS-ANSWER (INDX1) TO WS-GUESS (INDX1)
        MOVE "-" TO WS-UND (INDX1)
        MOVE 39 TO INDX3
        MOVE 40 TO INDX4
        MOVE 1 TO CHAR-INDX
        PERFORM 8020-MOVE-CHAR-TO-SELECT UNTIL WS-ANSWER(INDX1) =
            WS-CHAR (CHAR-INDX)
    ELSE
        MOVE "-" TO WS-UND (INDX1)
        MOVE WS-ANSWER (INDX1) TO VALID-VOWELS-IND
        CALL "UPPERCASE" USING VALID-VOWELS-IND WS-SIZE-01
        IF NOT VALID-VOWEL
            ADD 1 TO NBR-NON-VOWEL-CHARS.
    ADD 1 TO INDX1.
8010-EXIT. EXIT.

8020-MOVE-CHAR-TO-SELECT.
     IF WS-CHAR (CHAR-INDX) < WS-ANSWER (INDX1)
         NEXT SENTENCE
     ELSE
     IF WS-CHAR(CHAR-INDX) = WS-ANSWER (INDX1)
         NEXT SENTENCE
     ELSE
     IF WS-CHAR (CHAR-INDX) = HIGH-VALUES
         MOVE WS-ANSWER (INDX1)  TO WS-CHAR (CHAR-INDX)
     ELSE
         PERFORM 8025-INSERT  UNTIL INDX3 < CHAR-INDX
         MOVE WS-ANSWER (INDX1) TO WS-CHAR (CHAR-INDX).
     ADD 1 TO CHAR-INDX.
8020-EXIT. EXIT.

8025-INSERT.
    MOVE WS-CHAR (INDX3) TO WS-CHAR (INDX4).
    SUBTRACT 1 FROM INDX3 INDX4.
8025-EXIT. EXIT.

8100-GET-TABLE-ENTRY.
    IF TABLE-INDX > MAX-INDX
        MOVE 1 TO TABLE-INDX.
    MOVE WS-TABLE-REC (TABLE-INDX) TO WS-ANSWER-REC.
    IF LEVEL1
        MOVE SPACES TO WS-ANSWER-DESC.
    ADD 1 TO TABLE-INDX.
8100-EXIT. EXIT.

8900-INITIALIZE-FIELDS.
    MOVE ZEROES 		TO WS-VALUE 	WS-VALUE-NUM.
    MOVE WS-BALANCE-NUM         TO WS-BALANCE   WS-AMOUNT-NUM
			           WS-AMOUNT.
    MOVE SPACES			TO WS-BODY 	WS-WON-LOST-IND
                   		   WS-ANSWER-REC WS-UND-SCORE
                                   WS-GUESS-KEY WS-VOWELS-ONLY.
    MOVE HIGH-VALUES TO WS-CHAR-SELECTED.
8900-EXIT. EXIT.
/
9000-BUILD-SELECTION-TABLE.
    MOVE "N" TO FILE-IN-EOF-IND.
    OPEN INPUT FILE-IN.
    MOVE 0 TO MAX-INDX.
    MOVE SPACES TO WS-TABLE.
    PERFORM 9010-READ-FILE-INTO-TABLE UNTIL FILE-IN-EOF.
    CLOSE FILE-IN.
    MOVE 1 TO TABLE-INDX.
9000-EXIT. EXIT.

9010-READ-FILE-INTO-TABLE.
    READ FILE-IN AT END
        MOVE "Y" TO FILE-IN-EOF-IND.
    IF NOT FILE-IN-EOF
        ADD 1 TO MAX-INDX
        MOVE INPUT-REC TO WS-TABLE-REC (MAX-INDX).
9010-EXIT. EXIT.

9100-CREATE-NEW-INPUT-FILE.
    COMPUTE SPLIT-INDX = MAX-INDX / 2.
    COMPUTE INDX3 = SPLIT-INDX * 2.
    IF INDX3 NOT = MAX-INDX
        ADD 1 TO SPLIT-INDX.
    MOVE 1 TO INDX1 INDX4.
    MOVE SPLIT-INDX TO INDX2.
    MOVE SPACES TO WS-WORK-TABLE.
    PERFORM 9120-SPLIT-TABLE UNTIL INDX4 > MAX-INDX.
    EXPUNGE FILE-IN.
    OPEN OUTPUT FILE-IN.
    MOVE 0 TO INDX1.
    PERFORM 9110-WRITE-FILE-IN UNTIL INDX1 = MAX-INDX.
    CLOSE FILE-IN.
9100-EXIT. EXIT.

9110-WRITE-FILE-IN.
    ADD 1 TO INDX1.
    MOVE WS-WORK-REC (INDX1) TO INPUT-REC.
    WRITE INPUT-REC.
9110-EXIT. EXIT.

9120-SPLIT-TABLE.
    IF INDX2 NOT > MAX-INDX
        MOVE WS-TABLE-REC(INDX2) TO WS-WORK-REC(INDX4)
        ADD 1 TO INDX2 INDX4.
    IF INDX1 < SPLIT-INDX
        MOVE WS-TABLE-REC(INDX1) TO WS-WORK-REC(INDX4)
        ADD 1 TO INDX1 INDX4.
9120-EXIT. EXIT.

9200-EXTEND-FILE.
    OPEN EXTEND FILE-IN.
    MOVE 1 TO F01-MIN-ITEM-NBR.
    MOVE 2 TO F01-MAX-ITEM-NBR.
    PERFORM F01-INITIALIZE-ACCEPT-VALUES.
    PERFORM U01-BLANK-SCREEN.
    PERFORM U01-DISPLAY-TITLES.
    MOVE SPACES TO WS-ANSWER-REC.
    PERFORM 9250-WRITE-FILE-IN UNTIL F01-STOP OR F01-DONE
        OR F01-ABANDON.
    CLOSE FILE-IN.
    IF NOT F01-STOP
        MOVE F01-VALUE-CLEAR TO F01-FUNCTION-KEY.
9200-EXIT. EXIT.

9250-WRITE-FILE-IN.
    DISPLAY SS-EXTEND-SCREEN.
    PERFORM U01-WAITING.
    IF F01-ITEM-NBR = 1
        DISPLAY SS-ANSWER
        ACCEPT SS-ANSWER
    ELSE
    IF F01-ITEM-NBR = 2
        DISPLAY SS-DESC
        ACCEPT  SS-DESC.
    PERFORM U01-ACCEPT-FUNCTION-KEY.
    PERFORM 9255-EDIT-FUNCTION-KEY.
    PERFORM U01-PROCESS-FUNCTION-KEY.
9250-EXIT. EXIT.

9255-EDIT-FUNCTION-KEY.
    IF F01-NEW-LINE
        IF F01-ITEM-NBR = 1
            IF WS-ANSWER-KEY = SPACES
                MOVE F01-VALUE-ESCAPE TO F01-FUNCTION-KEY
                MOVE "Entry cannot be blank" TO U01-INSTRUCTIONS
            END-IF
        ELSE
            IF WS-ANSWER-DESC NOT = SPACES
                PERFORM 9260-STORE-ANSWER-REC
            ELSE
                MOVE F01-VALUE-ESCAPE TO F01-FUNCTION-KEY
                MOVE "Entry cannot be blank" TO U01-INSTRUCTIONS
    ELSE
    IF NOT (F01-STOP OR F01-ABANDON OR F01-DONE)
        PERFORM U01-INVALID-FUNCTION-KEY.
    IF F01-ESCAPE
        PERFORM 9800-FLASH-INSTRUCTIONS.
9255-EXIT. EXIT.

9260-STORE-ANSWER-REC.
    IF WS-ANSWER-KEY = SPACES
        MOVE 1 TO F01-NEXT-ITEM-NBR
        MOVE F01-VALUE-ESCAPE TO F01-FUNCTION-KEY
        MOVE "ENTRY CANNOT BE BLANK" TO U01-INSTRUCTIONS
    ELSE
    IF WS-ANSWER-DESC = SPACES
        MOVE 2 TO F01-NEXT-ITEM-NBR
        MOVE F01-VALUE-ESCAPE TO F01-FUNCTION-KEY
        MOVE "ENTRY CANNOT BE BLANK" TO U01-INSTRUCTIONS
    ELSE
        MOVE WS-ANSWER-REC TO INPUT-REC
        WRITE INPUT-REC
        MOVE SPACES TO WS-ANSWER-REC
        MOVE "RECORDS STORED" TO U01-INSTRUCTIONS
        MOVE F01-VALUE-CLEAR TO F01-FUNCTION-KEY
        MOVE 1 TO F01-NEXT-ITEM-NBR.
9260-EXIT. EXIT.

9500-INSTRUCTIONS.
    DISPLAY SS-INSTRUCTIONS.
    PERFORM 9505-ACCEPT UNTIL F01-STOP OR F01-DONE.
    IF F01-DONE
        MOVE F01-VALUE-CLEAR TO F01-FUNCTION-KEY.
9500-EXIT. EXIT.

9505-ACCEPT.
    PERFORM U01-WAITING.
    DISPLAY SS-LEVEL.
    ACCEPT SS-LEVEL.
    PERFORM U01-ACCEPT-FUNCTION-KEY.
    IF F01-NEW-LINE
        IF VALID-LEVEL
            MOVE F01-VALUE-DONE TO F01-FUNCTION-KEY
        ELSE
            MOVE F01-VALUE-ESCAPE TO F01-FUNCTION-KEY
            MOVE "Invalid level nbr" TO U01-INSTRUCTIONS
    ELSE
    IF F01-DONE OR F01-ABANDON OR F01-STOP
        MOVE F01-VALUE-STOP TO F01-FUNCTION-KEY
    ELSE
        PERFORM U01-INVALID-FUNCTION-KEY.
    IF F01-ESCAPE
        PERFORM 9800-FLASH-INSTRUCTIONS.
    PERFORM U01-PROCESS-FUNCTION-KEY.
9505-EXIT. EXIT.

9800-FLASH-INSTRUCTIONS.
    DISPLAY U01-INSTRUCTIONS-POS
            U01-INSTRUCTIONS F01-ERASE-TO-EOL WITH NO ADVANCING.
    CALL PROGRAM "#W".
    PERFORM U01-WAITING.
    DISPLAY U01-ABSOLUTE-LINE-24 WITH NO ADVANCING.
9800-EXIT. EXIT.

9900-PREPARE-HEADINGS.
*   CALL "GMES" USING THE-INITIAL-IPC-MSG THE-STATUS.
*   UNSTRING THE-INITIAL-IPC-MSG DELIMITED BY LOW-VALUES
*       INTO U01-SYSTEM-PARAMETERS.
    ACCEPT U01-CONSOLE-NBR FROM LINE NUMBER.
    CALL "USERNAME" USING U01-USERNAME THE-STATUS.
    MOVE "TEST" 	TO U01-INITIALS.
    MOVE "D400" TO U01-CONSOLE-TYPE.
    PERFORM U01-START-RUN.
    MOVE SPACES TO U01-TITLE-TABLE.
    MOVE "HANGMAN" TO U01-TITLE-1.
    CALL "CENTER" USING U01-TITLE-1 U01-TITLE-SIZE.
    PERFORM U01-BLANK-SCREEN.
    PERFORM U01-DISPLAY-TITLES.
    PERFORM 9500-INSTRUCTIONS.
9900-EXIT. EXIT.
/
        COPY "D02_BASIC_DATE_PR.CPY".
/
        COPY "F01_CURSOR_PR.CPY".
/
        COPY "U01_BASIC_PR.CPY".
